name: Release

on:
  release: 
    types: [created]

jobs:
  contract-release:
    name: Contract File Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Optimize Contract
        working-directory: ./smart-contract
        run: make optimize
      
      - name: Release Contract Data
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            smart-contract/artifacts/metadata_bilateral_exchange.wasm
            smart-contract/artifacts/checksums.txt

  kotlin-client-release:
    name: Kotlin Client Jar Release
    runs-on: ubuntu-latest
    env:
      # Needed to allow release version to be fetched and then sent to the publish artifact step
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Release Version
        run: |
          # Strip git prefix from version
          RELEASE_VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && RELEASE_VERSION=$(echo $RELEASE_VERSION | sed -e 's/^v//')
          # Echo derived version for reference
          echo "Using version: $RELEASE_VERSION"
          # Export release version from step for use in publish artifact step
          echo "::set-env name=RELEASE_VERSION::$RELEASE_VERSION"

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt
          server-id: github

      - name: Build with Gradle
        run: ./kotlin-client/gradlew clean build --refresh-dependencies -Pversion=$RELEASE_VERSION --project-dir ./kotlin-client

      - name: Install gpg secret key
        run: |
          export GPG_TTY=$(tty)
          echo -n "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
          echo -n "${{ secrets.OSSRH_GPG_SECRET_KEY }}" | base64 --decode > $GITHUB_WORKSPACE/release.gpg

      - name: Publish to Maven Central
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: |
          echo "Publishing release for version [$RELEASE_VERSION]"
          ./kotlin-client/gradlew publishToSonatype $(if [ "${{github.event.release.prerelease}}" = "true" ]; then echo 'closeSonatypeStagingRepository'; else echo 'closeAndReleaseSonatypeStagingRepository'; fi) \
            -Pversion=$RELEASE_VERSION \
            -Psigning.keyId=B7D30ABE -Psigning.password="${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}" -Psigning.secretKeyRingFile=$GITHUB_WORKSPACE/release.gpg \
            --info \
            --project-dir ./kotlin-client
